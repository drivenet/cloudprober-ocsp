// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ocsp/ocsp.proto

package ocsp

import (
	fmt "fmt"
	proto1 "github.com/cloudprober/cloudprober/probes/proto"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProbeConf struct {
	// Main domain certificate update interval
	CertificateRefreshInterval *int32 `protobuf:"varint,1,opt,name=certificate_refresh_interval,json=certificateRefreshInterval,def=60000" json:"certificate_refresh_interval,omitempty"`
	// Proxy URL, e.g. http://myproxy:3128
	ProxyUrl *string `protobuf:"bytes,2,opt,name=proxy_url,json=proxyUrl" json:"proxy_url,omitempty"`
	// Interval between targets.
	IntervalBetweenTargetsMsec *int32 `protobuf:"varint,98,opt,name=interval_between_targets_msec,json=intervalBetweenTargetsMsec,def=10" json:"interval_between_targets_msec,omitempty"`
	// Requests per probe.
	// Number of OCSP requests per probe. Requests are executed concurrently and
	// each OCSP request contributes to probe results. For example, if you run two
	// requests per probe, "total" counter will be incremented by 2.
	RequestsPerProbe     *int32   `protobuf:"varint,99,opt,name=requests_per_probe,json=requestsPerProbe,def=1" json:"requests_per_probe,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProbeConf) Reset()         { *m = ProbeConf{} }
func (m *ProbeConf) String() string { return proto.CompactTextString(m) }
func (*ProbeConf) ProtoMessage()    {}
func (*ProbeConf) Descriptor() ([]byte, []int) {
	return fileDescriptor_f6c5c913ab05ed9e, []int{0}
}

func (m *ProbeConf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProbeConf.Unmarshal(m, b)
}
func (m *ProbeConf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProbeConf.Marshal(b, m, deterministic)
}
func (m *ProbeConf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProbeConf.Merge(m, src)
}
func (m *ProbeConf) XXX_Size() int {
	return xxx_messageInfo_ProbeConf.Size(m)
}
func (m *ProbeConf) XXX_DiscardUnknown() {
	xxx_messageInfo_ProbeConf.DiscardUnknown(m)
}

var xxx_messageInfo_ProbeConf proto.InternalMessageInfo

const Default_ProbeConf_CertificateRefreshInterval int32 = 60000
const Default_ProbeConf_IntervalBetweenTargetsMsec int32 = 10
const Default_ProbeConf_RequestsPerProbe int32 = 1

func (m *ProbeConf) GetCertificateRefreshInterval() int32 {
	if m != nil && m.CertificateRefreshInterval != nil {
		return *m.CertificateRefreshInterval
	}
	return Default_ProbeConf_CertificateRefreshInterval
}

func (m *ProbeConf) GetProxyUrl() string {
	if m != nil && m.ProxyUrl != nil {
		return *m.ProxyUrl
	}
	return ""
}

func (m *ProbeConf) GetIntervalBetweenTargetsMsec() int32 {
	if m != nil && m.IntervalBetweenTargetsMsec != nil {
		return *m.IntervalBetweenTargetsMsec
	}
	return Default_ProbeConf_IntervalBetweenTargetsMsec
}

func (m *ProbeConf) GetRequestsPerProbe() int32 {
	if m != nil && m.RequestsPerProbe != nil {
		return *m.RequestsPerProbe
	}
	return Default_ProbeConf_RequestsPerProbe
}

var E_OcspProbe = &proto.ExtensionDesc{
	ExtendedType:  (*proto1.ProbeDef)(nil),
	ExtensionType: (*ProbeConf)(nil),
	Field:         200,
	Name:          "ocsp.ocsp_probe",
	Tag:           "bytes,200,opt,name=ocsp_probe",
	Filename:      "ocsp/ocsp.proto",
}

func init() {
	proto.RegisterType((*ProbeConf)(nil), "ocsp.ProbeConf")
	proto.RegisterExtension(E_OcspProbe)
}

func init() { proto.RegisterFile("ocsp/ocsp.proto", fileDescriptor_f6c5c913ab05ed9e) }

var fileDescriptor_f6c5c913ab05ed9e = []byte{
	// 304 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0x41, 0x4b, 0xc3, 0x30,
	0x14, 0x80, 0xe9, 0x70, 0x60, 0xe3, 0x61, 0x92, 0x53, 0x99, 0x13, 0x86, 0xa7, 0x89, 0x98, 0x76,
	0x1e, 0x3c, 0x0c, 0x4f, 0x53, 0x11, 0x0f, 0x83, 0x11, 0xf4, 0xe2, 0x25, 0xac, 0xd9, 0xeb, 0x16,
	0xe8, 0x9a, 0xfa, 0x92, 0x4e, 0xfd, 0x87, 0xfe, 0x15, 0xff, 0x85, 0x24, 0xb1, 0xa3, 0x5e, 0xda,
	0xf7, 0xf2, 0xbe, 0xf7, 0xc2, 0xfb, 0x42, 0x06, 0x5a, 0x9a, 0x3a, 0x75, 0x1f, 0x56, 0xa3, 0xb6,
	0x9a, 0x1e, 0xb9, 0x78, 0x78, 0xb7, 0x51, 0x76, 0xdb, 0xe4, 0x4c, 0xea, 0x5d, 0x2a, 0x4b, 0xdd,
	0xac, 0x6b, 0xd4, 0x39, 0xe0, 0xbf, 0xd8, 0xff, 0x4c, 0xea, 0xdb, 0x52, 0xa9, 0xab, 0x42, 0x6d,
	0xc2, 0x8c, 0x8b, 0x9f, 0x88, 0xc4, 0x4b, 0x57, 0xbd, 0xd7, 0x55, 0x41, 0x9f, 0xc8, 0x48, 0x02,
	0x5a, 0x55, 0x28, 0xb9, 0xb2, 0x20, 0x10, 0x0a, 0x04, 0xb3, 0x15, 0xaa, 0xb2, 0x80, 0xfb, 0x55,
	0x99, 0x44, 0xe3, 0x68, 0xd2, 0x9f, 0xf5, 0x6f, 0xb3, 0x2c, 0xcb, 0xf8, 0xb0, 0x83, 0xf2, 0x40,
	0x3e, 0xff, 0x81, 0xf4, 0x8c, 0xc4, 0x35, 0xea, 0xcf, 0x2f, 0xd1, 0x60, 0x99, 0xf4, 0xc6, 0xd1,
	0x24, 0xe6, 0xc7, 0xfe, 0xe0, 0x15, 0x4b, 0xfa, 0x48, 0xce, 0xdb, 0x89, 0x22, 0x07, 0xfb, 0x01,
	0x50, 0x09, 0xbb, 0xc2, 0x0d, 0x58, 0x23, 0x76, 0x06, 0x64, 0x92, 0xfb, 0x6b, 0x7a, 0xd3, 0x8c,
	0x0f, 0x5b, 0x70, 0x1e, 0xb8, 0x97, 0x80, 0x2d, 0x0c, 0x48, 0x9a, 0x12, 0x8a, 0xf0, 0xde, 0x80,
	0xb1, 0x46, 0xd4, 0x80, 0xc2, 0x2f, 0x99, 0x48, 0xdf, 0x1b, 0x4d, 0xf9, 0x69, 0x5b, 0x5c, 0x02,
	0xfa, 0x0d, 0x67, 0x0b, 0x42, 0x9c, 0xb1, 0x00, 0xd2, 0x11, 0xeb, 0x18, 0x62, 0xc1, 0x10, 0xf3,
	0xe0, 0x03, 0x14, 0xc9, 0xb7, 0x5b, 0xf5, 0xe4, 0x66, 0xc0, 0xbc, 0xef, 0x83, 0x21, 0x1e, 0xbb,
	0xdc, 0xa7, 0xf3, 0xab, 0xb7, 0xcb, 0x8e, 0xfa, 0x35, 0xaa, 0x3d, 0x54, 0x60, 0xbb, 0xde, 0xaf,
	0x0f, 0x2f, 0xf6, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xc9, 0x1d, 0x76, 0xea, 0xbd, 0x01, 0x00, 0x00,
}
